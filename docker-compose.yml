version: '3.8'
services:
  nginx:
    build:
      context: docker/images/nginx
    container_name: rabbitmq_nginx
    volumes:
      - './docker/images/nginx/conf.d:/etc/nginx/conf.d'
      - './docker/logs/nginx:/var/log/nginx'
      - './public:/var/www/public'
    ports:
      - 80:80
    depends_on:
      - php
    networks:
      - appnet

  php:
    build:
      context: docker/images/php
    container_name: rabbitmq_php
    volumes:
      - './public:/var/www/public'
      - './docker/logs/php:/var/log/php/'
    depends_on:
      - redis
    networks:
      - appnet
    extra_hosts:
      - host.docker.internal:host-gateway

  redis:
    build:
      context: docker/images/redis
    container_name: rabbitmq_redis
    restart: always
    command: [ "redis-server", "--save", "900", "1", "--save", "300", "10", "--dir", "/data" ]
    volumes:
      - ./docker/storage/redis:/data
    ports:
      - "6379:6379"
    networks:
      - appnet
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  rabbitmq:
    image: rabbitmq:4.1.0-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # порт для приложений (AMQP)
      - "15672:15672" # порт для веб-интерфейса
    networks:
      - appnet
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./docker/storage/rabbitmq:/var/lib/rabbitmq
    restart: unless-stopped

networks:
  appnet: